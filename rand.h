// Generated from random.org
char randlist[512] = {
  178, 211,   4, 246,  82,  42,  18,  73, 225, 251,   8,  23,  12,  38,  47, 168,
  198, 242, 219, 128, 103, 107, 244,  37, 132,  48, 104, 145, 111, 103,  46,  61,
  165,  97,  47, 239, 176, 145,  58, 206, 214, 105, 152,  22, 108, 247, 211,  47,
   90, 149, 251,  92, 180, 230, 127, 139,  33,  32,  16,  12, 125, 180, 242, 233,
  155, 131,  62,  91,  86,  96, 187, 253,  92,  47,  60,  39, 141, 164,  86,  45,
  157,  14, 138, 113,  18, 232, 205,  57, 196,  20,  44, 121, 187, 131, 148, 218,
  196, 193,  58, 218, 122, 112, 160, 179, 176,  82, 104, 163, 182, 114, 209,   4,
   52, 136,  29,   5, 226,  24,  47, 105, 124,  98,  77, 229,  56,  83, 234, 134,
  122,  57, 229,  38, 238,  76,  60, 182, 172,  74,  80, 157,  20, 145,  48,  17,
  253, 126,  36,  20,  95, 195,  99,  15,  66,  42,  21,  18, 228, 172, 181,   5,
   94,  90,  62, 187,  46, 122,  18, 194, 244,  90, 155, 227,  67, 205, 192, 139,
  102,  74,  68, 124,  27, 251, 162,  40,  15,  68, 166, 192, 157, 170, 141,  54,
  215,  57, 246, 157, 106,   9,  38,  44,  87, 135, 233, 225, 250,  67, 237,   6,
  188,  48, 106,  45, 116, 204, 250,  21, 119, 112, 109, 186,  86, 197, 232, 103,
  255,  56, 211, 125, 152, 136,  89, 164, 207, 152, 191,   1, 195,  91,  94,   6,
  213,  50, 212, 251, 168,  31,  69, 243, 157, 116,  53, 193,  60, 183,  95, 145,
   11,  10,  76,  50, 234, 231, 156, 172, 134,  42,  18,  70,  38,  41,  39,  81,
   56,  78, 157, 128,  54, 238, 228,  20,  23, 193, 109, 112,  41, 164, 113,  41,
    6,  67, 103,  19,  94,  14, 122, 221, 205, 250,  10,  42,  53,  64, 182,  67,
   90, 166, 160, 139, 151,   5, 124, 154,  93, 163, 254, 103, 233, 179, 232,  48,
   68,  69,  33, 166,   0, 212, 132, 216, 216, 143, 230, 109, 142, 110, 149, 217,
    4,  25, 214, 179, 206, 230, 182, 114, 170,  33,  57, 154,  95,  40,  48, 129,
  192, 243, 221, 252, 220, 127, 177,  96, 160, 144, 239,  74, 210, 110, 174,  98,
   63,  62,  76, 239,  29, 186,  41, 143, 197, 223, 114, 150,  25, 206,  67, 237,
  200, 198,  73, 184, 130,  37, 252,  53, 197,  31,  63, 249, 161, 164, 113,   4,
  142,  83,  50, 118, 106, 225, 188,  49, 168,  20, 189, 166, 204, 126, 177,  62,
   38, 242,  90, 188, 113, 201,  47, 239,  46, 195, 106,  61, 118, 127, 200, 137,
  188,  70, 206,  77, 204, 181,  73,   0, 188, 177, 133, 116, 196, 182,  65, 174,
   96,   1,  69,  66, 197, 213, 170,  93,  97, 119, 179, 111, 118,  18, 222, 163,
  196,  77, 222, 135, 119,  24, 128,  66,  69, 119,  16, 137, 123, 117, 189, 228,
  243, 133, 106,   2, 161, 190,  87, 242, 241, 109,  92, 108, 139, 183, 146,  51,
  139,  31,   2, 125, 159,  13, 172, 236,  42,  19, 241, 153,  33, 203,  71,  63
};

typedef struct {
  int key;
  int value;
} IntPair;

int sortIntPair(const void *ap, const void *bp)
{
  IntPair a = *((IntPair *)ap);
  IntPair b = *((IntPair *)bp);
  
  return b.value - a.value;
}

void shufflePlayers(Player *players, Player *shuffle) {
  IntPair rando[MAX_PLAYERS] = {};
  
  for (int i = 0; i < MAX_PLAYERS; i++) {
    rando[i] = {i,randlist[random(512)]};
  }

  qsort(rando, MAX_PLAYERS, sizeof(rando[0]), sortIntPair);
  
  for (int i = 0; i < MAX_PLAYERS; i++) {
    shuffle[i] = players[rando[i].key];
  }
}
